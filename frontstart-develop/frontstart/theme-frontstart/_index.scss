/**
 * Variables: Media
 * Description: Standardized media values for media queries
 * Usage example: @media *{$is-small} { your style } (* should be #)
 */

// Config (media start from px)
$small: 0;
$medium: 768;
$large: 1280;

// Query
$is-small: "(max-width: #{$medium - 1}px)";
$is-medium: "(min-width: #{$medium}px) and (max-width: #{$large - 1}px)";
$is-large: "(min-width: #{$large}px)";
$is-small-medium: "(max-width: #{$large - 1}px)";
$is-medium-large: "(min-width: #{$medium}px)";
$is-landscape: "(orientation: landscape)";
$is-portrait: "(orientation: portrait)";
$and-landscape: "and (orientation: landscape)";
$and-portrait: "and (orientation: portrait)";
$is-hdpi: "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)";
$and-hdpi: "and (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)";


/**
 * Maps: Offset
 * Description: Standardized offset values for a.o. padding and margin
 * Usage example: margin-bottom: offset(2);
 */

// Config
$offset-config: (
    base: 16,
    unit: px
);

// Offset
$offset: (
    1-4: get($offset-config, base) / 4 + get($offset-config, unit),
    1-3: get($offset-config, base) / 3 + get($offset-config, unit),
    1-2: get($offset-config, base) / 2 + get($offset-config, unit),
    1: get($offset-config, base) + get($offset-config, unit),
    2: get($offset-config, base) * 2 + get($offset-config, unit),
    3: get($offset-config, base) * 3 + get($offset-config, unit),
    4: get($offset-config, base) * 4 + get($offset-config, unit)
);


/**
 * Map: Color
 * Description: Standardized colors
 * Usage example: color: color(green, light);
 */

// Names
$color-name: (
    black: (
        default: #000,
        light: #333
    ),

    blue: (
        default: #3073aa,
        dark: #164063,
        light: #679dca
    ),

    green: (
        default: #6b8e23,
        dark: blue,
        light: #87a648
    ),

    gray: (
        default: #aaa,
        dark: #666,
        light: #ddd
    ),

    orange: (
        default: #cf9336,
        dark: #97661b,
        light: #e3bb7b
    ),

    red: (
        default: #bc4327,
        dark: #7b2a17,
        light: #dc826e
    ),

    white: (
        default: #fff,
        dark: #f5f5f5
    )
);

// Type
$color-type: (
    positive: (
        default: get($color-name, green),
        dark: get($color-name, green, dark),
        light: get($color-name, green, light)
    ),

    neutral: (
        default: get($color-name, blue),
        dark: get($color-name, blue, dark),
        light: get($color-name, blue, light)
    ),

    resistance: (
        default: get($color-name, orange),
        dark: get($color-name, orange, dark),
        light: get($color-name, orange, light)
    ),

    negative: (
        default: get($color-name, red),
        dark: get($color-name, red, dark),
        light: get($color-name, red, light),
    )
);

// All colors (merged)
$color: map-merge($color-name, $color-type);


/**
 * Map: Font
 * Description: Standardized fonts
 * Usage example: font(primary, size);
 */

$font: (
    primary: (
        color: color(black, light),
        family: ("Arial", "Helvetica"),
        size: 16px,
        size-small: 14px,
        size-large: 18px,
        line-height: 1.4,
        line-height-small: 1,
        line-height-large: 1.8,
        weight: 400
    ),

    secundary: (
        color: color(black, light),
        family: ("Verdana", "Arial", "Helvetica"),
        size: 16px,
        size-small: 14px,
        size-large: 18px,
        line-height: 1.4,
        line-height-small: 1,
        line-height-large: 1.8,
        weight: 400
    )
);


/**
 * Global style
 */

@mixin hx {
    .h1,
    .h2,
    .h3,
    .h4,
    .h5,
    .h6 { @content; }
}

.border-radius { border-radius: 5px; }

.box-shadow { box-shadow: 0 0 5px rgba(color(black), 0.5); }

.clearfix::after {
    clear: both;
    content: "";
    display: table;
}

main { display: block; }


/**
 * Reset
 */

.reset-a {
    color: inherit;
    cursor: pointer;
    text-decoration: none;
}

.reset-button {
    @include appearance(none);
    @include user-select(none);
    border: none;
    box-sizing: border-box;
    cursor: pointer;
    display: inline-block;
    font: #{font(primary, size)}/1 font(primary);
    margin: 0;
    outline: none;
    padding: 0;
    text-align: center;
    text-decoration: none;
}

.reset-input {
    &[type="text"] {
        background-color: transparent;
        border: none;
        font: inherit;
        outline: none;
        padding: 0;
    }
}